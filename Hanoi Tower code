class Stack:
    def __init__(self):
        self.stack = []

    def pop(self):
        if self.is_empty():
            return None
        else:
            return self.stack.pop()

    def push(self, value):
        return self.stack.append(value)

    def peak(self):
        if self.isEmpty():
            return None
        else:
            return self.stack[-1]

    
    def isEmpty(self):
        return self.len() == 0

    def display(self):
        print self.stack


class Tower:
    def __init__(self, numDisks):
        self.numDisks = numDisks
        self.towers = [Stack(), Stack(), Stack()]
        for i in range(n, -1, -1):
            towers[0].push(i)


def moveDisk(src, dest):
    towers[dest].push(towers[src].pop())


def moveTower(n, src, spare, dest):
    if n == 0:
        moveDisk(src, dest)
    else:
        moveTower(n - 1, src, dest, spare)
        moveDisk(src, dest)
        moveTower(n - 1, spare, src, dest)
def main():
    hanoi = Tower
    moveDisk(hanoi)
    moveTower(hanoi)


main()
